<etl>
	<!-- 一般就在etl文件中配置即可 -->
	<lookup>
	<datasources>
			<datasource type="flat" id="ds1">
<!-- 				数据源的参数借鉴ibatis，都用property来描述 -->
				<property name="path" value="${filePath}" />
<!-- 				对于普通文件flat和hdfs文件，需要定义文件中的字段分隔符以及字段名称 -->
				<fields delimiter="\t">
					<field id="f1" />
					<field id="f2" />
				</fields>
			</datasource>
			<datasource type="hdfs" id="ds2">
<!-- 				数据源的参数借鉴ibatis，都用property来描述 -->
				<property name="path" value="${hdfsPath}" />
<!-- 				对于普通文件flat和hdfs文件，需要定义文件中的字段分隔符以及字段名称 -->
				<fields delimiter="\|">
					<field id="f1" />
					<field id="f2" />
				</fields>
			</datasource>
		</datasources>
<!-- 		每一个表必须有id，以便transform应用方便，表中存放就是map<key,value>，如 1 预付费 2 后付费 如果没有定义数据源，最简单都是在配置文件中定义维表 -->
		<table id="t0">
			<map key="1" value="预付费" />
			<map key="2" value="后付费" />
		</table>
<!-- 		datasource可以引用dataSources中的定义。对于flat和hdfs，map中的key和value字段值来自于数据源定义的字段 -->
		<table id="t1">
			<datasource ref="ds1" />
			<map key="f1" value="f2" />
		</table>
		<table id="t3">
			<datasource ref="ds2" />
			<map key="f1" value="f2" />
		</table>
<!-- 		暂时支持在配置文件定义维表，普通文件或者hdfs文件中读取，mysql中读取几种 -->
		<table id="t2">
			<datasource type="mysql">
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
				<fields>
					<sql>select id,name from itcast_user</sql>
				</fields>
			</datasource>
<!-- 			map中的key和value值来自于sql语句字段，名称必须一致 -->
			<map key="id" value="name" />
		</table>
	</lookup>
</etl>